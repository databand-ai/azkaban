/*
 * Copyright 2017 LinkedIn Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *
 */

apply plugin: 'c'
model {
  components {
    main(NativeExecutableSpec) {
      sources {
        c {
          source {
            srcDir "src/main"
            include "**/*.c"
          }
        }
      }
    }
  }
}

dependencies {
  api project(':azkaban-spi')

  api('com.google.guava:guava:13.0.1')
  api('commons-collections:commons-collections:3.2.2')
  api('commons-dbcp:commons-dbcp:1.4')
  api('commons-dbutils:commons-dbutils:1.5')
  api('commons-fileupload:commons-fileupload:1.2.1')
  api('commons-io:commons-io:2.4')
  api('commons-lang:commons-lang:2.6')
  api('javax.mail:mail:1.4.5')
  api('joda-time:joda-time:2.0')
  api('log4j:log4j:1.2.16')
  api('mysql:mysql-connector-java:5.1.28')
  api('net.sf.jopt-simple:jopt-simple:4.3')
  api('org.apache.commons:commons-jexl:2.1.1')
  api('org.apache.commons:commons-math3:3.0')
  api('org.apache.httpcomponents:httpclient:4.5.2')
  api('org.apache.httpcomponents:httpcore:4.4.5')
  api('org.apache.velocity:velocity:1.7')
  api('org.codehaus.jackson:jackson-core-asl:1.9.5')
  api('org.codehaus.jackson:jackson-mapper-asl:1.9.5')
  api('org.mortbay.jetty:jetty:6.1.26')
  api('org.mortbay.jetty:jetty-util:6.1.26')
  api('org.quartz-scheduler:quartz:2.2.1')
  api('org.yaml:snakeyaml:1.18')
  api('io.dropwizard.metrics:metrics-core:3.1.0')
  api('io.dropwizard.metrics:metrics-jvm:3.1.0')

  testImplementation('org.hamcrest:hamcrest-all:1.3')
  testImplementation('org.mockito:mockito-all:1.10.19')
  testImplementation(project(':azkaban-test').sourceSets.test.output)
}

tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
}
